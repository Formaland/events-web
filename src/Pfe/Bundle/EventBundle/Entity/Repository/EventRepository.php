<?php

namespace Pfe\Bundle\EventBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
    public function findAllByLocale($locale)
    {
        $query = $this->getEntityManager()->createQueryBuilder('p');
        $query->select('p, pTrans')
            ->from('PfeEventBundle:Event', 'p')
            ->innerJoin('p.translations', 'pTrans')
            ->where('pTrans.locale = :locale')
            ->setParameter('locale', $locale);

        return $query->getQuery()->getResult();
    }

    public function findAllByLocaleAndCriteria($locale, $criteria)
    {
        $query = $this->getEntityManager()->createQueryBuilder('p');
        $query->select('p, pTrans')
            ->from('PfeEventBundle:Event', 'p')
            ->innerJoin('p.translations', 'pTrans')
            ->where('pTrans.locale = :locale')
            ->setParameter('locale', $locale);

        foreach ($criteria as $field => $value) {
            if($value){
                if ($field = 'title' or $field = 'description') {
                    $query->andWhere($query->expr()->eq('pTrans.'.$field, ':pTrans_'.$field))
                        ->setParameter('pTrans_'.$field, $value);
                }
                else{
                    $query->andWhere($query->expr()->eq('p.' . $field, ':p_' . $field))
                        ->setParameter('p_' . $field, $value);
                }

            }
        }

        return $query->getQuery()->getResult();
    }

    public function findOneByLocale($token = null, $locale)
    {
        $query = $this->getEntityManager()->createQueryBuilder('p');
        $query->select('p, pTrans')
            ->from('PfeEventBundle:Event', 'p')
            ->innerJoin('p.translations', 'pTrans')
            ->where('p.token = :token')
            ->andWhere('pTrans.locale = :locale')
            ->setParameters(array('locale' => $locale, 'token' => $token));

        return $query->getQuery()->getOneOrNullResult();
    }

    public function findOneBySlugAndLocale($slug = null, $locale)
    {
        $query = $this->getEntityManager()->createQueryBuilder('p');
        $query->select('p, pTrans')
            ->from('PfeEventBundle:Event', 'p')
            ->innerJoin('p.translations', 'pTrans')
            ->where('pTrans.slug = :slug')
            ->andWhere('pTrans.locale = :locale')
            ->setParameters(array('locale' => $locale, 'slug' => $slug));

        return $query->getQuery()->getOneOrNullResult();
    }
}
